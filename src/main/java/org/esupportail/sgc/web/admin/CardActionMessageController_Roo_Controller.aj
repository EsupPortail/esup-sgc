// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.esupportail.sgc.web.admin;

import java.io.UnsupportedEncodingException;
import javax.servlet.http.HttpServletRequest;
import org.esupportail.sgc.domain.CardActionMessage;
import org.esupportail.sgc.web.admin.CardActionMessageController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect CardActionMessageController_Roo_Controller {
    
    @RequestMapping(params = "form", produces = "text/html")
    public String CardActionMessageController.createForm(Model uiModel) {
        populateEditForm(uiModel, new CardActionMessage());
        return "admin/actionmessages/create";
    }
    
    @RequestMapping(value = "/{id}", produces = "text/html")
    public String CardActionMessageController.show(@PathVariable("id") Long id, Model uiModel) {
        uiModel.addAttribute("cardactionmessage", CardActionMessage.findCardActionMessage(id));
        uiModel.addAttribute("itemId", id);
        return "admin/actionmessages/show";
    }
    
    @RequestMapping(value = "/{id}", params = "form", produces = "text/html")
    public String CardActionMessageController.updateForm(@PathVariable("id") Long id, Model uiModel) {
        populateEditForm(uiModel, CardActionMessage.findCardActionMessage(id));
        return "admin/actionmessages/update";
    }
    
    void CardActionMessageController.populateEditForm(Model uiModel, CardActionMessage cardActionMessage) {
        uiModel.addAttribute("cardActionMessage", cardActionMessage);
    }
    
    String CardActionMessageController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        return pathSegment;
    }
    
}
