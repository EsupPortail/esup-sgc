// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.esupportail.sgc.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.esupportail.sgc.domain.EscrCard;

privileged aspect EscrCard_Roo_Finder {
    
    public static Long EscrCard.countFindEscrCardsByCardUidEquals(String cardUid) {
        if (cardUid == null || cardUid.length() == 0) throw new IllegalArgumentException("The cardUid argument is required");
        EntityManager em = EscrCard.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM EscrCard AS o WHERE o.cardUid = :cardUid", Long.class);
        q.setParameter("cardUid", cardUid);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<EscrCard> EscrCard.findEscrCardsByCardUidEquals(String cardUid) {
        if (cardUid == null || cardUid.length() == 0) throw new IllegalArgumentException("The cardUid argument is required");
        EntityManager em = EscrCard.entityManager();
        TypedQuery<EscrCard> q = em.createQuery("SELECT o FROM EscrCard AS o WHERE o.cardUid = :cardUid", EscrCard.class);
        q.setParameter("cardUid", cardUid);
        return q;
    }
    
    public static TypedQuery<EscrCard> EscrCard.findEscrCardsByCardUidEquals(String cardUid, String sortFieldName, String sortOrder) {
        if (cardUid == null || cardUid.length() == 0) throw new IllegalArgumentException("The cardUid argument is required");
        EntityManager em = EscrCard.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM EscrCard AS o WHERE o.cardUid = :cardUid");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<EscrCard> q = em.createQuery(queryBuilder.toString(), EscrCard.class);
        q.setParameter("cardUid", cardUid);
        return q;
    }
    
}
