// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.esupportail.sgc.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.esupportail.sgc.domain.EscrStudent;

privileged aspect EscrStudent_Roo_Finder {
    
    public static Long EscrStudent.countFindEscrStudentsByEppnEquals(String eppn) {
        if (eppn == null || eppn.length() == 0) throw new IllegalArgumentException("The eppn argument is required");
        EntityManager em = EscrStudent.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM EscrStudent AS o WHERE o.eppn = :eppn", Long.class);
        q.setParameter("eppn", eppn);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<EscrStudent> EscrStudent.findEscrStudentsByEppnEquals(String eppn) {
        if (eppn == null || eppn.length() == 0) throw new IllegalArgumentException("The eppn argument is required");
        EntityManager em = EscrStudent.entityManager();
        TypedQuery<EscrStudent> q = em.createQuery("SELECT o FROM EscrStudent AS o WHERE o.eppn = :eppn", EscrStudent.class);
        q.setParameter("eppn", eppn);
        return q;
    }
    
    public static TypedQuery<EscrStudent> EscrStudent.findEscrStudentsByEppnEquals(String eppn, String sortFieldName, String sortOrder) {
        if (eppn == null || eppn.length() == 0) throw new IllegalArgumentException("The eppn argument is required");
        EntityManager em = EscrStudent.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM EscrStudent AS o WHERE o.eppn = :eppn");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<EscrStudent> q = em.createQuery(queryBuilder.toString(), EscrStudent.class);
        q.setParameter("eppn", eppn);
        return q;
    }
    
}
