<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd         
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd         
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd         
						http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd         
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

       <bean id="crousService" class="org.esupportail.sgc.services.crous.CrousService">
               <property name="use4ExternalCard" value="false"/>
       </bean>

	<bean id="httpClientFactory"
		class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
		<property name="connectTimeout" value="10000" />
		<property name="readTimeout" value="10000" />
		<property name="httpClient" ref="httpClient"/>
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg ref="httpClientFactory" />
	</bean>
	
	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder"
	    factory-method="create">
	    <property name="connectionReuseStrategy">
	    	<bean class="org.apache.http.impl.NoConnectionReuseStrategy"/>
	    </property>
	</bean>
	
	<bean id="httpClient" factory-bean="httpClientBuilder" factory-method="build" />


	<bean id="apiCrousService" class="org.esupportail.sgc.services.crous.ApiCrousService">
		<property name="enable" value="false"/>
		<property name="webUrl" value="https://api-pp.nuonet.fr" />
		<property name="appId" value="appIdDeApiCrousPourEsupSgc" />
		<property name="appSecret" value="appSecretDeApiCrousPourEsupSgc" />
		<property name="restTemplate" ref="restTemplate" />
	</bean>
	
	
	<bean id="europeanStudentCardService" class="org.esupportail.sgc.services.esc.ApiEscrService">
		<property name="enable" value="false"/>
		<property name="webUrl" value="http://api-sandbox.europeanstudentcard.eu/v1" />
		<property name="key" value="key-genertaed-from-router-sandbox.europeanstudentcard.eu" />
		<property name="restTemplate" ref="restTemplate" />
		<property name="countryCode" value="FR"/>
		<property name="picInstitutionCode" value="123456789"/>
		<!-- 
		Type of cards. Possibles values are :
		1 - passive card, with no electronic
		2 - Smartcard without European common data zone
		3 - Smartcard with European common data zone
		4 - Smartcard on which application may be installed by service providers
		 -->
 		<property name="cardType" value="2"/>
		<property name="cardTypes">
                  <map>
                    <entry key="2050-03-09 16:17:10" value="3"/>
                  </map>
		</property>
	</bean>


	<bean id="escUidFactoryService" class="org.esupportail.sgc.services.esc.EscUidFactoryService">
		<property name="pic" value="123456789"/>
		<property name="prefixe" value="1 " />
		<property name="qrCodeUrlPrefixe" value="http://pp.esc.gg/" />
	</bean>

	<!--
        <bean id="escDeuInfoService" class="org.esupportail.sgc.services.esc.EscDeuInfoService">
	        <property name="pic" value="123456789"/>
                <property name="deuInfoPrivateKey" value="classpath:META-INF/security/esc/ca.intermediate.key.der"/>
                <property name="deuInfoPublicKey" value="classpath:META-INF/security/esc/ca.intermediate.cert.der" />
        </bean>
	-->
	
</beans>
